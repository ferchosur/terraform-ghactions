# This is a basic workflow to help you get started with Actions

name: Terraform Github Actions Demo

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    env:
      ARM_SUBSCRIPTION_ID: 'c0aa9b3a-3c24-4e93-ac87-81c18b255a17'
      ARM_TENANT_ID: 'a271c543-a269-4fe0-a929-8036ded23729'
      ARM_CLIENT_ID: 'f4524f6e-0b4a-4872-adea-43b7e045d52e'
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      AZURE_STORAGE: 'terraformdemo987876234'
      
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Install Azure cli
        run: |
          sudo apt-get install ca-certificates curl apt-transport-https lsb-release gnupg
          curl -sL https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor | sudo tee /etc/apt/trusted.gpg.d/microsoft.gpg > /dev/null
          AZ_REPO=$(lsb_release -cs)
          echo "deb [arch=amd64] https://packages.microsoft.com/repos/azure-cli/ $AZ_REPO main" | sudo tee /etc/apt/sources.list.d/azure-cli.list
          sudo apt-get update
          sudo apt-get install azure-cli
          
      - name: Azure Login
        uses: Azure/login@v1.4.3
        with:
          # Paste output of `az ad sp create-for-rbac` as value of secret variable: AZURE_CREDENTIALS
          creds: ${{ secrets.AZURE_CREDENTIALS }} # optional
          
      # Runs a single command using the runners shell
      - name: Build Terraform State
        run: chmod +x ./tfstate.sh && ./tfstate.sh ${{ env.AZURE_STORAGE }}
   
      - name: HashiCorp - Setup Terraform
        uses: hashicorp/setup-terraform@v1.2.1
      
      - name: Terraform init
        run:  terraform init -backend-config="storage_account_name=${{ env.AZURE_STORAGE }}"
      
      - name: Terraform plan
        run: terraform plan -out=tfplan
      
      - name: Terraform apply
        run: terraform apply tfplan
